
# Toplevel Makefile for Linux build of PasswordSafe

# TBD: Grok following from src/ui/wxWidgets/version.in
RELEASENUM := 0.96
RELEASE_SPECIAL := BETA

# Since we use wxWidgets 3.x, while many distros still provide 2.8
# The following need to be set to point to the local build of wxWidgets.
# Alternately, you can just set WX_CONFIG in your shell environment
# export WX_CONFIG=$(HOME)/src/wxWidgets-3.0.2/wx-config

# Shouldn't change anything below here

.PHONY:    all clean debug-clean release-clean debug release \
	unicodedebug unicoderelease deb rpm rpmbuild tar signatures \
	dist sha1sums upload upload-src git-tag I18N help

RELEASENAME := $(RELEASENUM)$(RELEASE_SPECIAL)

RELEASEDIR := ./Releases/

MKDIR := mkdir -p
RM := /bin/rm -rf
GIT := git
GZIP := gzip
ECHO := /bin/echo

NO_YUBI := yes

GPG := /usr/local/bin/gpg
GPG_SIGN := $(GPG) --detach-sign --default-key $(GPG_KEY)
SIGN_CMD := $(foreach file, $(wildcard $(RELEASEDIR)/*$(RELEASENAME)*), $(GPG_SIGN) $(file); )

SHA1SUM := /usr/bin/sha1
UPLOAD_CMD := /usr/local/bin/rsync -avP -e ssh
UPLOAD_DST := $(UPLOAD_ROOT)/Linux-BETA/$(RELEASENUM)
RELTAG = wx$(subst .,_,$(RELEASENAME))

export CXXFLAGS=-std=c++11 -I/usr/local/include -DNO_YUBI
export CFLAGS+=-I/usr/local/include -DNO_YUBI
export CC=clang
export CXX=clang++
export CPP=clang++

all: I18N unicodedebug unicoderelease

unicodedebug unicoderelease:
	$(MAKE) -C src/os/freebsd $@
	$(MAKE) -C src/core $@
	$(MAKE) -C src/ui/wxWidgets CONFIG=$@


debug:
	$(MAKE) unicodedebug

release:
	$(MAKE) unicoderelease

clean: debug-clean release-clean

debug-clean:
	$(MAKE) CONFIG=unicodedebug -C src/os/freebsd clean
	$(MAKE) CONFIG=unicodedebug -C src/core clean
	$(MAKE) CONFIG=unicodedebug -C src/ui/wxWidgets clean

release-clean:
	$(MAKE) CONFIG=unicoderelease -C src/os/freebsd clean
	$(MAKE) CONFIG=unicoderelease -C src/core clean
	$(MAKE) CONFIG=unicoderelease -C src/ui/wxWidgets clean

# dist prepares stuff for upload - deprecated for Linux, until
# we find an elegant way to tell deb and rpm distros apart.
dist: 
	@$(ECHO) "Run 'make deb' or 'make rpm' to build the respective package"

# rpmbuild is called as part of the rpmbuild invocation from install/rpm/Makefile,
# which we call via 'make rpm' from here.
rpmbuild: release I18N help

deb:	release tar
	@$(MKDIR) $(RELEASEDIR)
	$(MAKE) -C install/$@ \
	RELEASENAME=$(RELEASENAME) RELEASEDIR=../../$(RELEASEDIR)
	$(MAKE) signatures sha1sums

rpm:	I18N tar
	@$(MKDIR) $(RELEASEDIR)
	$(MAKE) -C install/$@ \
	RELEASENAME=$(RELEASENAME) RELEASEDIR=../../$(RELEASEDIR)
	$(MAKE) signatures sha1sums

tar:
	@$(MKDIR)  $(RELEASEDIR)
	@$(GIT) archive HEAD --prefix=pwsafe-$(RELEASENAME)/ | $(GZIP) > $(RELEASEDIR)pwsafe-$(RELEASENAME)-src.tgz
	@echo "Done."

sha1sums:
	(cd $(RELEASEDIR); $(SHA1SUM) *$(RELEASENAME)*)

signatures:
	$(SIGN_CMD)

upload:
	$(UPLOAD_CMD) \
	$(wildcard $(RELEASEDIR)/passwordsafe-*$(RELEASENAME)*) \
	$(wildcard $(RELEASEDIR)/pwsafe-*$(RELEASENAME)*) \
	$(UPLOAD_DST)

# Uploading source is a separate target as we only want to do this once,
# as oppoded to uploading the compiled package, which we need to do per distro.
upload-src:
	$(UPLOAD_CMD) \
	$(wildcard $(RELEASEDIR)/pwsafe-*$(RELEASENAME)-src*) \
	$(UPLOAD_DST)

git-tag:
	$(GIT) tag -u $(GPG_KEY) -m "tag wx $(RELEASENAME) release" $(RELEASENAME)

I18N:
	$(MAKE) -C src/ui/wxWidgets/I18N mos

help:
	$(MAKE) -C help

# Local variables:
# mode: makefile
# End:
