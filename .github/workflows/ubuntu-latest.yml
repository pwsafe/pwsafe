
name: CMake Ubuntu-latest

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

permissions: { }

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4.1.1

    - name: Setup Environment
      # Pull in required prerequistes
      run: |
        sudo apt-get update
        sudo Misc/setup-linux-dev-env.sh

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build build --config ${{env.BUILD_TYPE}} -- -j

    - name: Test
      working-directory: build
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest --config ${{env.BUILD_TYPE}} .

    - name: Package
      working-directory: build
      # create a deb package
      run: cpack -G DEB ..

    - name: Test Package
      working-directory: build
      run: sudo dpkg -i ./p*.deb

    - name: Upload artifacts
      uses: 'actions/upload-artifact@v4.3.1'
      with:
        name: PasswordSafe-ubuntu-latest.${{ github.sha }}
        path: build/p*.deb
        if-no-files-found: error